<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ac">


	
	<!-- 계좌 추가 -->
	<insert id="account_insert" parameterType="account">
		insert into ACCOUNT_LIST(account_number, user_id, bank_name, now_money, account_pwd, account_color, account_lockcnt) 
      	values(
               #{account_number},
               #{user_id},
               #{bank_name},
               #{now_money},
               #{account_pwd},
               #{account_color},
               #{account_lockcnt}
      )		
	</insert>
	
	<!-- 해당 user_id의 전체 계좌 목록 조회 -->
	<select id="account_list" resultType="account" parameterType="String">
		select * from ACCOUNT_LIST where user_id = #{user_id}
	</select>
	
	<select id="account_selectOne" resultType="account" parameterType="String">
		select * from ACCOUNT_LIST where account_number = #{account_number}
	</select>
	<select id="account_info" resultType="account" parameterType="String">
		select * from account_list where account_number = #{account_number}
	</select>
	
	<select id="accountuser_info" resultType="account" parameterType="String">
		select * from account_list where user_id = #{user_id} and account_number = #{account_number}
	</select>
	
	<select id="user_info" resultType="user" parameterType="String">
		select * from user_info where user_id = #{user_id}
	</select>
	
	
	
	<insert id="detail_insert" parameterType="account_detail">
		insert into ACCOUNT_detail values(
			seq_account_idx.nextVal,
			#{account_number},
			#{user_name},
			#{depo_username},
			#{depo_account},
			#{deal_money},
			sysdate
		)
	</insert>
	
	<update id="user_money" parameterType="account">
		update ACCOUNT_LIST set now_money = #{now_money} where account_number = #{account_number}
	</update>
	
	<!-- 삭제를 위한 비밀번호 체크 -->
	<select id="select_one" resultType="user" parameterType="String">
		select * from USER_INFO where account_number=#{account_number}
	</select>
	
	
	<select id="accountdetail_list" resultType="account_detail" parameterType="account">
		select * from account_detail where account_number = #{account_number} or depo_account = #{account_number}
		order by bank_date desc
	</select>
	
	<delete id="account_delete" parameterType="String">
		delete from account_list where account_number=#{account_number}
	</delete>
	
	<select id="searchdetailaccount_list" resultType="account_detail" parameterType="java.util.Map">
	    SELECT * FROM account_detail 
	    WHERE (account_number = #{account_number} OR depo_account = #{account_number})
	    AND bank_date BETWEEN #{begin, jdbcType=DATE} AND #{end, jdbcType=DATE}
	    ORDER BY ${order}
	</select>
	
	<!-- 해당 숫자를 포함하는 계좌 번호 검색 -->
	<select id="search_userinfo_account" resultType="account" parameterType="String">
		select * from account_list where account_number Like '%' || #{search_account_number} || '%'
	</select>
	<update id="account_lock_update" parameterType="account">
		update ACCOUNT_LIST set account_lockcnt = #{account_lockcnt} where account_number = #{account_number}
	</update>
	
	
</mapper>












